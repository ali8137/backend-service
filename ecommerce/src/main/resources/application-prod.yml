#this is the production version of the application.yml file

server:
#  port: 8088
  port: 8080

spring:
  application:
    name: ecommerce
  ## Database
  datasource:
#    url: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
    url: jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQL_DATABASE}
    #    username: ${MYSQL_USER}
    username: ${MYSQLUSER}
    #    password: ${MYSQL_PASSWORD}
    password: ${MYSQLPASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
      #        ddl-auto: create-drop
      #        ddl-auto: none
      #        ddl-auto: create
      #      create-drop and update are not suitable for production
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect

## logging configuration:
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

## properties to be added/injected into the application code:
## secret info/properties:
#jwt:
#  secret: ${JWT_SECRET_KEY}
# the above environment variable was rather accessed using System.getenv("JWT_SECRET_KEY")

stripe:
  api:
    key: ${STRIPE_SECRET_KEY}
#    webhook-secret: ${STRIPE_WEBHOOK_SECRET}
# the above environment variable was rather accessed using System.getenv("STRIPE_WEBHOOK_SECRET")

## security configuration: (like OAuth2 configuration for resource server and OAuth2 client):

# TODO: Oauth2 configuration